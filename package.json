{
  "devDependencies": {
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^9.2.1",
    "semantic-release": "^22.0.5"
  },
  "name": "cdl-3.1",
  "description": "**1. Install the semantic-release on your local environment:**      $ npm install --save-dev semantic-release      $ npm install semantic-release @semantic-release/git @semantic-release/github -D **2. Create a config file (release.config.js) in the project with the contents below:** ``` release.config.js ==================== module.exports = { branches: \"main\", repositoryUrl: \"https://github.com/Kenmakhanu/actionstest.git\", plugins: [   '@semantic-release/commit-analyzer',   '@semantic-release/release-notes-generator',   '@semantic-release/git',   '@semantic-release/github']  } ``` **3. Add your project to the repo:**      git add . **4. Commit your project to the repo using conventional commits. Your commit messages should start with:** ```    fix:                  ......for a patch version    feat:                 ......for a minor version    BREAKING CHANGE:      .......for a major version ``` **5. Add step in the CI workflow:** ``` name: release workflow on: [workflow_dispatch] jobs:   run-shell-command:     permissions:       contents: write       issues: write       pull-requests: write    runs-on: ubuntu-latest     steps:      - name: checkout        uses: actions/checkout@v3 # clone a repository      - name: release        run: npx semantic-release        env:          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} ``` - Or use conditions like: ```      name: release workflow      on:         [workflow_dispatch]      - name: Create a release        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'        run: npx semantic-release        env:          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}} ``` **6. After the code is pushed to the repo, trigger this workflow manually to publish and create a release version.** ``` - name: Create a release   if: github.event_name == 'push' && github.ref == 'refs/heads/main'   run: npx semantic-release   env:   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}} - name: Terraform apply   if: github.ref == 'refs/heads/main' && github.event_name == 'push'   run: terraform apply -auto-approve ``` ################################################################# # back to step 5, the code below worked for me name: Release Workflow on: workflow_dispatch jobs:   release:     permissions:       contents: write       issues: write       pull-requests: write     runs-on: ubuntu-latest     steps:       - name: Checkout code         uses: actions/checkout@v2       - name: Install Node.js         uses: actions/setup-node@v2         with:           node-version: '20'       - name: Install dependencies         run: npx semantic-release --global         # Replace 'semantic-release' with the actual package name if needed       - name: Release         run: semantic-release         env:           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}",
  "version": "1.0.0",
  "main": "release.config.js",
  "dependencies": {
    "agent-base": "^7.1.0",
    "aggregate-error": "^5.0.0",
    "ansi-escapes": "^6.2.0",
    "ansi-regex": "^5.0.1",
    "ansi-styles": "^4.3.0",
    "ansicolors": "^0.3.2",
    "argparse": "^2.0.1",
    "argv-formatter": "^1.0.0",
    "array-ify": "^1.0.0",
    "before-after-hook": "^2.2.3",
    "bottleneck": "^2.19.5",
    "braces": "^3.0.2",
    "callsites": "^3.1.0",
    "cardinal": "^2.1.1",
    "chalk": "^5.3.0",
    "char-regex": "^1.0.2",
    "clean-stack": "^5.2.0",
    "cli-table3": "^0.6.3",
    "cliui": "^8.0.1",
    "color-convert": "^2.0.1",
    "color-name": "^1.1.4",
    "compare-func": "^2.0.0",
    "config-chain": "^1.1.13",
    "conventional-changelog-angular": "^7.0.0",
    "conventional-changelog-writer": "^7.0.1",
    "conventional-commits-filter": "^4.0.0",
    "conventional-commits-parser": "^5.0.0",
    "core-util-is": "^1.0.3",
    "cosmiconfig": "^8.3.6",
    "cross-spawn": "^7.0.3",
    "crypto-random-string": "^4.0.0",
    "debug": "^4.3.4",
    "deep-extend": "^0.6.0",
    "deprecation": "^2.3.1",
    "dir-glob": "^3.0.1",
    "dot-prop": "^5.3.0",
    "duplexer2": "^0.1.4",
    "emoji-regex": "^8.0.0",
    "emojilib": "^2.4.0",
    "env-ci": "^10.0.0",
    "error-ex": "^1.3.2",
    "escalade": "^3.1.1",
    "escape-string-regexp": "^5.0.0",
    "esprima": "^4.0.1",
    "execa": "^8.0.1",
    "fast-glob": "^3.3.1",
    "fastq": "^1.15.0",
    "figures": "^5.0.0",
    "fill-range": "^7.0.1",
    "find-up": "^6.3.0",
    "find-versions": "^5.1.0",
    "from2": "^2.3.0",
    "fs-extra": "^11.1.1",
    "function-bind": "^1.1.1",
    "get-caller-file": "^2.0.5",
    "get-stream": "^6.0.1",
    "git-log-parser": "^1.2.0",
    "glob-parent": "^5.1.2",
    "globby": "^13.2.2",
    "graceful-fs": "^4.2.11",
    "handlebars": "^4.7.8",
    "has": "^1.0.3",
    "has-flag": "^4.0.0",
    "hook-std": "^3.0.0",
    "hosted-git-info": "^7.0.1",
    "http-proxy-agent": "^7.0.0",
    "https-proxy-agent": "^7.0.2",
    "human-signals": "^5.0.0",
    "ignore": "^5.2.4",
    "import-fresh": "^3.3.0",
    "import-from": "^4.0.0",
    "indent-string": "^5.0.0",
    "inherits": "^2.0.4",
    "ini": "^1.3.8",
    "into-stream": "^7.0.0",
    "is-arrayish": "^0.2.1",
    "is-core-module": "^2.13.0",
    "is-extglob": "^2.1.1",
    "is-fullwidth-code-point": "^3.0.0",
    "is-glob": "^4.0.3",
    "is-number": "^7.0.0",
    "is-obj": "^2.0.0",
    "is-plain-object": "^5.0.0",
    "is-stream": "^3.0.0",
    "is-text-path": "^2.0.0",
    "is-unicode-supported": "^1.3.0",
    "isarray": "^1.0.0",
    "isexe": "^2.0.0",
    "issue-parser": "^6.0.0",
    "java-properties": "^1.0.2",
    "js-tokens": "^4.0.0",
    "js-yaml": "^4.1.0",
    "json-parse-better-errors": "^1.0.2",
    "json-parse-even-better-errors": "^2.3.1",
    "json-stringify-safe": "^5.0.1",
    "jsonfile": "^6.1.0",
    "jsonparse": "^1.3.1",
    "JSONStream": "^1.3.5",
    "lines-and-columns": "^1.2.4",
    "load-json-file": "^4.0.0",
    "locate-path": "^7.2.0",
    "lodash": "^4.17.21",
    "lodash-es": "^4.17.21",
    "lodash.capitalize": "^4.2.1",
    "lodash.escaperegexp": "^4.1.2",
    "lodash.isplainobject": "^4.0.6",
    "lodash.isstring": "^4.0.1",
    "lodash.uniqby": "^4.7.0",
    "lru-cache": "^10.0.1",
    "marked": "^9.0.3",
    "marked-terminal": "^6.0.0",
    "meow": "^12.1.1",
    "merge-stream": "^2.0.0",
    "merge2": "^1.4.1",
    "micromatch": "^4.0.5",
    "mime": "^3.0.0",
    "mimic-fn": "^4.0.0",
    "minimist": "^1.2.8",
    "ms": "^2.1.2",
    "neo-async": "^2.6.2",
    "nerf-dart": "^1.0.0",
    "node-emoji": "^2.1.0",
    "normalize-package-data": "^6.0.0",
    "normalize-url": "^8.0.0",
    "npm": "^10.2.0",
    "npm-run-path": "^5.1.0",
    "once": "^1.4.0",
    "onetime": "^6.0.0",
    "p-each-series": "^3.0.0",
    "p-filter": "^3.0.0",
    "p-is-promise": "^3.0.0",
    "p-limit": "^4.0.0",
    "p-locate": "^6.0.0",
    "p-map": "^5.5.0",
    "p-reduce": "^3.0.0",
    "p-try": "^1.0.0",
    "parent-module": "^1.0.1",
    "parse-json": "^5.2.0",
    "path-exists": "^5.0.0",
    "path-key": "^3.1.1",
    "path-type": "^4.0.0",
    "picomatch": "^2.3.1",
    "pify": "^3.0.0",
    "pkg-conf": "^2.1.0",
    "process-nextick-args": "^2.0.1",
    "proto-list": "^1.2.4",
    "queue-microtask": "^1.2.3",
    "rc": "^1.2.8",
    "read-pkg": "^8.1.0",
    "read-pkg-up": "^10.1.0",
    "readable-stream": "^2.3.8",
    "redeyed": "^2.1.1",
    "registry-auth-token": "^5.0.2",
    "require-directory": "^2.1.1",
    "resolve-from": "^5.0.0",
    "reusify": "^1.0.4",
    "run-parallel": "^1.2.0",
    "safe-buffer": "^5.1.2",
    "semver": "^7.5.4",
    "semver-diff": "^4.0.0",
    "semver-regex": "^4.0.5",
    "shebang-command": "^2.0.0",
    "shebang-regex": "^3.0.0",
    "signal-exit": "^4.1.0",
    "signale": "^1.4.0",
    "skin-tone": "^2.0.0",
    "slash": "^4.0.0",
    "source-map": "^0.6.1",
    "spawn-error-forwarder": "^1.0.0",
    "spdx-correct": "^3.2.0",
    "spdx-exceptions": "^2.3.0",
    "spdx-expression-parse": "^3.0.1",
    "spdx-license-ids": "^3.0.15",
    "split2": "^4.2.0",
    "stream-combiner2": "^1.1.1",
    "string-width": "^4.2.3",
    "string_decoder": "^1.1.1",
    "strip-ansi": "^6.0.1",
    "strip-bom": "^3.0.0",
    "strip-final-newline": "^3.0.0",
    "strip-json-comments": "^2.0.1",
    "supports-color": "^7.2.0",
    "supports-hyperlinks": "^3.0.0",
    "temp-dir": "^3.0.0",
    "tempy": "^3.1.0",
    "text-extensions": "^2.4.0",
    "through": "^2.3.8",
    "through2": "^2.0.5",
    "to-regex-range": "^5.0.1",
    "traverse": "^0.6.7",
    "type-fest": "^3.13.1",
    "uglify-js": "^3.17.4",
    "unicode-emoji-modifier-base": "^1.0.0",
    "unique-string": "^3.0.0",
    "universal-user-agent": "^6.0.0",
    "universalify": "^2.0.0",
    "url-join": "^5.0.0",
    "util-deprecate": "^1.0.2",
    "validate-npm-package-license": "^3.0.4",
    "which": "^2.0.2",
    "wordwrap": "^1.0.0",
    "wrap-ansi": "^7.0.0",
    "wrappy": "^1.0.2",
    "xtend": "^4.0.2",
    "y18n": "^5.0.8",
    "yallist": "^4.0.0",
    "yargs": "^17.7.2",
    "yargs-parser": "^21.1.1",
    "yocto-queue": "^1.0.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
